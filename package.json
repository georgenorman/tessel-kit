{
  "name": "tessel-kit",
  "version": "0.0.6",
  "description": "Simple Helpers and Utils for developing Tessel applications.",
  "main": "lib/index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": {
    "name": "George Norman",
    "url": "https://github.com/georgenorman?tab=repositories"
  },
  "homepage": "https://github.com/georgenorman/tessel-kit",
  "repository": {
    "type": "git",
    "url": "git://github.com/georgenorman/tessel-kit.git"
  },
  "license": {
    "type": "Apache License, Version 2.0",
    "url": "http://www.apache.org/licenses/LICENSE-2.0"
  },
  "readme": "# TesselKit\n\nA simple module that can be useful for basic Tessel app development.\n\n\n## Examples\n\n* [Tessel Climate Module Test Project](https://github.com/georgenorman/tessel-climate)\n\n\n## Overview of the TesselKit Modules\n\n### tessel-utils\n\nThis module contains specialized utility functions (useful for Tessel app development). Some examples:\n\n* **getArgumentValue(argumentName, defaultValue)**: Read the argument, with the given `argumentName`, from the commandline and if it doesn't exist, use the given `defaultValue`.\n  The default can be a scalar or an object. If it's an object, then retrieve the value using the given `argumentName` as the key.\n* **isValidPort(port)**: Returns true if the given port is a valid name (e.g., \"A\", \"B\").\n\n\nExample:\n\n```javascript\n// Configure the application from the commandline.\n// If an argument is missing, then read it from the config file.\nvar climatePort = tesselKit.tesselUtils.getArgumentValue(\"climatePort\", config);\nvar refreshRate = tesselKit.tesselUtils.getArgumentValue(\"refreshRate\", config);\n\nvar portStatus = tesselKit.tesselUtils.isValidPort(climatePort);\n```\n\n\n### log-helper\n\nThis module contains helper functions for logging to the console. Some examples:\n\n* **heading1(heading)**: Log a level-1 heading.\n* **heading2(heading)**: Log a level-2 heading.\n* **heading3(heading)**: Log a level-3 heading.\n* **listProperties(obj)**: Dump an object's properties to the console, using the `getProperties` function from the general-utils module.\n* **error(errMsg, err)**: Log and error.\n\nExample:\n\n```javascript\n// Display startup banner (and list the current configuration)\ntesselKit.logHelper.heading1(\"B E G I N\");\ntesselKit.logHelper.listProperties({\n  \"Climate Port\": climatePort,\n  \"Refresh Rate\": refreshRate\n});\ntesselKit.logHelper.divider1();\n```\n\nRenders the following:\n\n```bash\n###################################################################\n# B E G I N\n###################################################################\nRefresh Rate=500,\nClimate Port=A\n###################################################################\n```\n\n### general-utils\n\nThis module contains some general-purpose helper functions. Some examples:\n\n* **coalesceOnEmpty(value, defaultValue)**: Returns the given `value`, if not empty; otherwise, returns the given `defaultValue`.\n* **isEmpty(value)**: Returns true if the given `value` is undefined, null, an empty String or an Object with a length property that's zero (e.g., a zero-length array).\n* **getProperties(obj, maxNumProperties)**: Return a String, of the form \"propertyName=propertyValue\\n\", for every property of the given `obj`, or until maxNumProperties has been reached.\n* **copyProperties(source, target)**: Copy all properties that are directly owned by the given `source` object (i.e., hasOwnProperty) to the given `target` object.\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/georgenorman/tessel-kit/issues"
  }
}
